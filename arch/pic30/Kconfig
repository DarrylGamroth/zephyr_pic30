# PIC30 architecture configuration options

# Copyright (c) 2020 Rubus Technologies Inc.
# SPDX-License-Identifier: Apache-2.0

menu "PIC30 Options"
	depends on PIC30

config ARCH
	default "pic30"

#
# CPU Families - the SoC configuration should select the right one.
#

config CPU_PIC24E
	bool
	help
	  This option signifies the use of a CPU from the PIC24E family.

config CPU_PIC24F
	bool
	help
	  This option signifies the use of a CPU from the PIC24F family.

config CPU_PIC24H
	bool
	help
	  This option signifies the use of a CPU from the PIC24H family.

config CPU_DSPIC33C
	bool
	help
	  This option signifies the use of a CPU from the dsPIC33C family.

config CPU_DSPIC33E
	bool
	help
	  This option signifies the use of a CPU from the dsPIC33E family.

config CPU_DSPIC33F
	bool
	help
	  This option signifies the use of a CPU from the dsPIC33F family.

config DYNAMIC_DIRECT_INTERRUPTS
	bool "Enable support for dynamic direct interrupts"
	depends on DYNAMIC_INTERRUPTS
	help
	  Direct interrupts are designed for performance-critical interrupt
	  handling and do not go through all of the common interrupt handling
	  code. This option enables the installation of interrupt service
	  routines for direct interrupts at runtime.
	  Note: this requires enabling support for dynamic interrupts in the
	  kernel.

config FAULT_DUMP
	int "Fault dump level"
	default 2
	range 0 2
	help
	  Different levels for display information when a fault occurs.

	  2: The default. Display specific and verbose information. Consumes
		the most memory (long strings).

	  1: Display general and short information. Consumes less memory
		(short strings).

	  0: Off.

config ZERO_LATENCY_IRQS
	bool "Enable zero-latency interrupts"
	default y
	help
	  The kernel may reserve some of the highest interrupts priorities in
	  the system for its own use. These interrupts will not be masked
	  by interrupt locking.
	  When connecting interrupts the kernel will offset all interrupts
	  to lower priority than those reserved by the kernel.
	  Zero-latency interrupt can be used to set up an interrupt at the
	  highest interrupt priority which will not be blocked by interrupt
	  locking.
	  Since Zero-latency ISRs will run in the same priority or possibly at
	  higher priority than the rest of the kernel they cannot use any
	  kernel functionality.

config GEN_ISR_TABLES
	default y

config GEN_IRQ_VECTOR_TABLE
	default n

config GEN_IRQ_START_VECTOR
	default 0

config NUM_IRQS
	int

config NUM_IRQ_PRIO_LEVELS
	int
	default 8

endmenu
